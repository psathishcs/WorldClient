/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
 		classpath('se.transmode.gradle:gradle-docker:1.2')
 		classpath("org.springframework.cloud:spring-cloud-consul-dependencies:1.2.1.RELEASE")
     }
}
// Apply the java-library plugin to add support for Java Library
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'


jar {
    baseName = 'worldclient-v1'
    version =  '0.1.0'
}
// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

group = 'world'
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web")
 	compile("org.springframework.boot:spring-boot-starter-tomcat")
   	compile("org.springframework.boot:spring-boot-starter-actuator")
    compile('org.springframework.cloud:spring-cloud-starter-ribbon')
   	compile("org.springframework.cloud:spring-cloud-starter-consul-discovery:1.2.1.RELEASE")
	testCompile("org.springframework.boot:spring-boot-starter-test")
}


task buildDocker(type: Docker, dependsOn: build) {
  push = true
  applicationName = jar.baseName
  dockerfile = file('src/main/docker/Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}

